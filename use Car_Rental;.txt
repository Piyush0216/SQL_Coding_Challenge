use Car_Rental;

-- Create Vehicle Table
CREATE TABLE Vehicle (
    vehicleID INT PRIMARY KEY,
    make VARCHAR(255),
    model VARCHAR(255),
    year INT,
    dailyRate DECIMAL(10, 2),
    status ENUM('available', 'notAvailable'),
    passengerCapacity INT,
    engineCapacity INT
);

-- Create Customer Table
CREATE TABLE Customer (
    customerID INT PRIMARY KEY,
    firstName VARCHAR(255),
    lastName VARCHAR(255),
    email VARCHAR(255),
    phoneNumber VARCHAR(15) 
);

-- Create Lease Table
CREATE TABLE Lease (
    leaseID INT PRIMARY KEY,
    vehicleID INT,
    customerID INT,
    startDate DATE,
    endDate DATE,
    type ENUM('Daily', 'Monthly'),
    FOREIGN KEY (vehicleID) REFERENCES Vehicle(vehicleID),
    FOREIGN KEY (customerID) REFERENCES Customer(customerID)
);

-- Create Payment Table
CREATE TABLE Payment (
    paymentID INT PRIMARY KEY,
    leaseID INT,
    paymentDate DATE,
    amount DECIMAL(10, 2),
    FOREIGN KEY (leaseID) REFERENCES Lease(leaseID)
);

-- ===========================================================================================================
-- INSERTION INTO TABLES--
-- Insert data into Vehicle Table
INSERT INTO Vehicle (vehicleID, make, model, year, dailyRate, status, passengerCapacity, engineCapacity) 
VALUES 
(1, 'Toyota', 'Camry', 2022, 50.00, 'available', 4, 1450),
(2, 'Honda', 'Civic', 2023, 45.00, 'available', 7, 1500),
(3, 'Ford', 'Focus', 2022, 48.00, 'notAvailable', 4, 1400),
(4, 'Nissan', 'Altima', 2023, 52.00, 'available', 7, 1200),
(5, 'Chevrolet', 'Malibu', 2022, 47.00, 'available', 4, 1800),
(6, 'Hyundai', 'Sonata', 2023, 49.00, 'notAvailable', 7, 1400),
(7, 'BMW', '3 Series', 2023, 60.00, 'available', 7, 2499),
(8, 'Mercedes', 'C-Class', 2022, 58.00, 'available', 8, 2599),
(9, 'Audi', 'A4', 2022, 55.00, 'notAvailable', 4, 2500),
(10, 'Lexus', 'ES', 2023, 54.00, 'available', 4, 2500);

-- Insert data into Customer Table
INSERT INTO Customer (customerID, firstName, lastName, email, phoneNumber) 
VALUES 
(1, 'John', 'Doe', 'johndoe@example.com', '555-555-5555'),
(2, 'Jane', 'Smith', 'janesmith@example.com', '555-123-4567'),
(3, 'Robert', 'Johnson', 'robert@example.com', '555-789-1234'),
(4, 'Sarah', 'Brown', 'sarah@example.com', '555-456-7890'),
(5, 'David', 'Lee', 'david@example.com', '555-987-6543'),
(6, 'Laura', 'Hall', 'laura@example.com', '555-234-5678'),
(7, 'Michael', 'Davis', 'michael@example.com', '555-876-5432'),
(8, 'Emma', 'Wilson', 'emma@example.com', '555-432-1098'),
(9, 'William', 'Taylor', 'william@example.com', '555-321-6547'),
(10, 'Olivia', 'Adams', 'olivia@example.com', '555-765-4321');

-- Insert data into Lease Table
INSERT INTO Lease (leaseID, vehicleID, customerID, startDate, endDate, type) 
VALUES 
(1, 1, 1, '2023-01-01', '2023-01-05', 'Daily'),
(2, 2, 2, '2023-02-15', '2023-02-28', 'Monthly'),
(3, 3, 3, '2023-03-10', '2023-03-15', 'Daily'),
(4, 4, 4, '2023-04-20', '2023-04-30', 'Monthly'),
(5, 5, 5, '2023-05-05', '2023-05-10', 'Daily'),
(6, 4, 3, '2023-06-15', '2023-06-30', 'Monthly'),
(7, 7, 7, '2023-07-01', '2023-07-10', 'Daily'),
(8, 8, 8, '2023-08-12', '2023-08-15', 'Monthly'),
(9, 3, 3, '2023-09-07', '2023-09-10', 'Daily'),
(10, 10, 10, '2023-10-10', '2023-10-31', 'Monthly');

-- Insert data into Payment Table
INSERT INTO Payment (paymentID, leaseID, paymentDate, amount) 
VALUES 
(1, 1, '2023-01-03', 200.00),
(2, 2, '2023-02-20', 1000.00),
(3, 3, '2023-03-12', 75.00),
(4, 4, '2023-04-25', 900.00),
(5, 5, '2023-05-07', 60.00),
(6, 6, '2023-06-18', 1200.00),
(7, 7, '2023-07-03', 40.00),
(8, 8, '2023-08-14', 1100.00),
(9, 9, '2023-09-09', 80.00),
(10, 10, '2023-10-25', 1500.00);

show tables;
-- ----------------------------------------------------------------------------------------------------------------------------
-- ============================================================================================================================
-- QUERIES 


/* 1. Update the daily rate for a Mercedes car to 68. */

UPDATE Vehicle
SET dailyRate = 68.00
WHERE make = 'Mercedes';

/* 2. Delete a specific customer and all associated leases and payments.*/

DELETE FROM Customer
WHERE firstName = 'Olivia' AND lastName = 'Adams';

/*
3. Rename the "paymentDate" column in the Payment table to "transactionDate". */

ALTER TABLE Payment
CHANGE COLUMN paymentDate transactionDate DATE;

/*
4. Find a specific customer by email. */

select * from customer
where customer.Email = 'sarah@example.com';

select * from customer
where customer.Email = email;

/* 5. Get active leases for a specific customer. */

select lease.*
from Lease
join Vehicle on lease.vehicleID = vehicle.vehicleID
where Lease.customerID = 'customerId'; -- 2 --

/* 6. Find all payments made by a customer with a specific phone number.*/

select Payment.*
from Payment
join Lease ON Payment.leaseID = Lease.leaseID
join Customer ON Lease.customerID = Customer.customerID
where Customer.phoneNumber = 'mobile number';  -- 555-555-5555 --

/* 7. Calculate the average daily rate of all available cars. */

select AVG(dailyRate) AS avg_daily_rate
from Vehicle
where status = 'available';

/* 8. Find the car with the highest daily rate. */

select vehicle.make
from vehicle
where dailyRate = (
    select MAX(dailyRate)
    from Vehicle
);

-- Alternate way --- 

select vehicle.make
from vehicle
order by dailyRate DESC
limit 1;

/* 9. Retrieve all cars leased by a specific customer. */

select vehicle.make,vehicle.model
from  vehicle
join lease on lease.vehicleID = vehicle.vehicleID
join customer on lease.customerID = customer.customerID
where customer.customerID = 2;

/* 10. Find the details of the most recent lease. */

select lease.*
from lease
order by enddate desc
limit 1;

-- we can also solve this using sub querry for that we need to first find the lease with maximum date then join result with the Lease,
-- Vehicle, and Customer tables to retrieve all the details
/* 
SELECT l.*
FROM Lease l
JOIN Vehicle v ON l.vehicleID = v.vehicleID
JOIN Customer c ON l.customerID = c.customerID
WHERE l.endDate = (
    SELECT MAX(endDate)
    FROM Lease);
*/


/*  11. List all payments made in the year 2023. */

select *
from Payment
where year(transactionDate) = 2023;

/* 12. Retrieve customers who have not made any payments. */

select customer.*
from customer
join lease on lease.customerID = customer.customerID
join payment on payment.leaseID = lease.leaseID
where payment.paymentID is null;


/* 13. Retrieve Car Details and Their Total Payments. */

select vehicle.* , sum(payment.amount) as total_payment
from vehicle
LEFT JOIN lease  ON vehicle.vehicleID = lease.vehicleID
LEFT JOIN Payment  ON lease.leaseID = payment.leaseID
GROUP BY vehicle.vehicleID;

/* 14. Calculate Total Payments for Each Customer. */

select customer.*, sum(payment.amount) as Total_Payment
from customer
LEFT JOIN lease  ON customer.customerID = lease.customerID
LEFT JOIN payment  ON lease.leaseID = payment.leaseID
GROUP BY customer.customerID, customer.firstName, customer.lastName, customer.email, customer.phoneNumber;

/* 15. List Car Details for Each Lease. */

select lease.leaseID , vehicle.*
from lease
join vehicle on lease.vehicleID = vehicle.vehicleID;


/* 16. Retrieve Details of Active Leases with Customer and Car Information. */
/* 17. Find the Customer Who Has Spent the Most on Leases. */
/* 18. List All Cars with Their Current Lease Information. */
